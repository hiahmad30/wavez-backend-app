{
  "openapi": "3.0.3",
  "info": {
    "title": "Wavez Prod Backend",
    "description": "Rest Api for Wavez Backend",
    "version": "v1.0.0"
  },
  "servers": [
    {
      "url": "/api"
    },
    {
      "url": "https://wavez-dev.cf:3000/api"
    },
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Sign Up for a New User",
        "operationId": "userSignup",
        "requestBody": {
          "description": "User Sign Up Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "email": {
                      "type": "string",
                      "default": "example@test.com"
                    },
                    "message": {
                      "type": "string",
                      "default": "Account Created and Email Sent!!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Json",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/pseudoAdmin": {
      "post": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create Pseudo Admin",
        "operationId": "pseudoAdmin",
        "requestBody": {
          "description": "Create Pseudo Admin User",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "email": {
                      "type": "string",
                      "default": "example@test.com"
                    },
                    "message": {
                      "type": "string",
                      "default": "Account Created and Email Sent!!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Json",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get All Pseudo Admin",
        "operationId": "getPseudoAdmin",
        "requestBody": {
          "description": "Get Pseudo Admin User",
          "content": {}
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
            }
          },
          "400": {
            "description": "Invalid Json",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/pseudoAdmin/{id}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Update Pseudo Admin Info",
        "operationId": "pseudoAdminUpdateInfo",
        "requestBody": {
          "description": "Update Pseudo Admin Info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
              }
            }
          },
          "400": {
            "description": "Invalid Json",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete a pseudo admin",
        "operationId": "deletePseudoAdmin",
        "requestBody": {
          "content": {
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/getListings": {
      "get": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get All User Listings",
        "operationId": "getAllUserListings",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "listings": {
                      "type": "array",
                      "items": {
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/getListings/guest/{id}": {
      "get": {
        "tags": [
          "Guest User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Get By Vessel Id"
          }
        ],
        "summary": "Get All User Listings",
        "operationId": "getAllUserListingsGuest",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "listings": {
                      "type": "array",
                      "items": {
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/getUserDetails": {
      "get": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get User Details from token",
        "operationId": "getUserDetails",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel": {
      "post": {
        "tags": [
          "Vessel"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Create vessel",
        "operationId": "createVessel",
        "requestBody": {
          "description": "vesselType enum list: RENTALS,STAYS,CHARTERS.",
          "content": {
            "application/json": {
              "schema": {
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "400": {
            "description": "Invalid Json",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/vessel/category": {
      "get": {
        "tags": [
          "Vessel"
        ],
        "summary": "Get vessel categories",
        "operationId": "getVesselCategories",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add a new category",
        "operationId": "addCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel/category/{categoryId}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update a category",
        "operationId": "updateCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete a Category",
        "operationId": "DeleteCategory",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel/fuel": {
      "get": {
        "tags": [
          "Vessel"
        ],
        "summary": "Get vessel fuel",
        "operationId": "getVesselFuel",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fuel": {
                      "type": "string"
                    },
                    "isVisible": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add a new fuel",
        "operationId": "addFuel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fuel": {
                    "type": "string"
                  },
                  "isVisible": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fuel": {
                      "type": "string"
                    },
                    "isVisible": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel/fuel/{fuelId}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update a fuel",
        "operationId": "updateFuel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fuel": {
                    "type": "string"
                  },
                  "isVisible": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fuel": {
                      "type": "string"
                    },
                    "isVisible": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "categoryId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete a fuel",
        "operationId": "deleteFuel",
        "requestBody": {
          "content": {
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel/feature": {
      "get": {
        "tags": [
          "Vessel"
        ],
        "summary": "Get vessel features",
        "operationId": "getVesselFeatures",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "feature": {
                      "type": "string"
                    },
                    "iconURL": {
                      "type": "string"
                    },
                    "isVisible": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add a new feature",
        "operationId": "addFeature",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "feature": {
                    "type": "string"
                  },
                  "iconURL": {
                    "type": "string"
                  },
                  "isVisible": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "feature": {
                      "type": "string"
                    },
                    "iconURL": {
                      "type": "string"
                    },
                    "isVisible": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel/feature/{featureId}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "featureId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update a feature",
        "operationId": "updateFeature",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "feature": {
                    "type": "string"
                  },
                  "iconURL": {
                    "type": "string"
                  },
                  "isVisible": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "feature": {
                      "type": "string"
                    },
                    "iconURL": {
                      "type": "string"
                    },
                    "isVisible": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "featureId",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete a Feature",
        "operationId": "DeleteFeature",
        "requestBody": {
          "content": {
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel/feature/uploadIcon": {
      "post": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Upload Images for feature",
        "operationId": "uploadFeatureIconPost",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "upload icon",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Upload Images for feature",
        "operationId": "uploadFeatureIconPut",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "existingUrl": {
                    "type": "string",
                    "description": "URL of the previosly uploaded image."
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "update icon",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vessel/deleteIcon": {
      "delete": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Delete Icon",
        "operationId": "deleteFeatureIconByUrl",
        "requestBody": {
          "content": {
          }
        },
        "responses": {
          "200": {
            "description": "delete icon",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vessel/image/{vesselId}": {
      "put": {
        "tags": [
          "Vessel"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add image to a vessel",
        "operationId": "addVesselImage",
        "description": "Used to upload a single image to a vessel. NOTE: Each Image Size limit is 10MB.",
        "parameters": [
          {
            "name": "vesselId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "caption": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel/images/{vesselId}": {
      "put": {
        "tags": [
          "Vessel"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add multiple images to a vessel",
        "operationId": "addVesselImages",
        "description": "Used to upload multiple images to a vessel. NOTE: Each Image Size limit is 10MB.",
        "parameters": [
          {
            "name": "vesselId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "captions": {
                    "description": "The array of captions",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "images": {
                    "description": "The array of images",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel/updateImageCaptions/{vesselId}": {
      "put": {
        "tags": [
          "Vessel"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update captions of vessel images",
        "operationId": "updateVesselImageCaptions",
        "description": "Used to update the captions of an existing image.",
        "parameters": [
          {
            "name": "vesselId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "imageId",
                    "caption"
                  ],
                  "properties": {
                    "imageId": {
                      "type": "string"
                    },
                    "caption": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel/updateImage/{imageId}": {
      "put": {
        "tags": [
          "Vessel"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update the previously uploaded file",
        "operationId": "updateVesselImage",
        "description": "Used to update the previously uploaded file on the blob.",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel/updateCoverImage": {
      "put": {
        "tags": [
          "Vessel"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Makes the provided Image as the cover image",
        "operationId": "updateVesselCoverImage",
        "description": "Used to update the cover image of a vessel.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "imageId"
                ],
                "properties": {
                  "imageId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel/image/{imageId}": {
      "delete": {
        "tags": [
          "Vessel"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete image By Image Id",
        "operationId": "deleteVesselImage",
        "description": "Used to delete a single image from a vessel and blob.",
        "parameters": [
          {
            "name": "imageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel/document/{vesselId}": {
      "get": {
        "tags": [
          "Vessel"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get documents",
        "operationId": "getVesselDocument",
        "description": "Used to get the documents from a vessel.",
        "parameters": [
          {
            "name": "vesselId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Vessel"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add file to a vessel",
        "operationId": "addVesselFile",
        "description": "Used to upload a single document to a vessel. NOTE: Each File Size limit is 10MB. The file types can be: 'BOATLICENSE', 'MARINESURVEY', 'VSS', 'MOTORLICENCE', 'PCOC', 'PCCCP', 'PCL', 'INSURANCE'",
        "parameters": [
          {
            "name": "vesselId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "fileType": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel/document/{documentId}": {
      "delete": {
        "tags": [
          "Vessel"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete document By document Id",
        "operationId": "deleteVesselDocument",
        "description": "Used to delete a single document from a vessel and blob.",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel/admin/document/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get documents",
        "operationId": "getVesselDocumentAdmin",
        "description": "Used to get the documents from a vessel.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update document By document Id",
        "operationId": "updateVesselDocument",
        "description": "Used to Update ",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/rentals": {
      "get": {
        "tags": [
          "Rentals"
        ],
        "summary": "Get Rentals List",
        "operationId": "getRentals",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRental"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Rentals"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add a new Rental",
        "operationId": "addRental",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRental"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRental"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/rentals/{id}": {
      "get": {
        "tags": [
          "Rentals"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Get By Vessel Id"
          }
        ],
        "summary": "Get Rental By Id",
        "operationId": "getRentalById",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRental"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Rentals"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Vessel Id"
          },
          {
            "in": "path",
            "name": "vesselType",
            "schema": {
              "type": "string",
              "enum": [
                "RENTAL"
              ]
            },
            "required": true,
            "description": "Vessel Type {STAY,RENTAL,CHARTER}"
          }
        ],
        "summary": "Update a Rentals",
        "operationId": "updateRentals",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRental"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateRental"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Rentals"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Vessel Id"
          },
          {
            "in": "path",
            "name": "vesselType",
            "schema": {
              "type": "string",
              "enum": [
                "RENTAL"
              ]
            },
            "required": true,
            "description": "Vessel Type {STAY,RENTAL,CHARTER}"
          }
        ],
        "summary": "Delete a Rentals",
        "operationId": "deleteRentals",
        "requestBody": {
          "content": {
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/rentals/guest/{id}": {
      "get": {
        "tags": [
          "Guest User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Get By Vessel Id"
          }
        ],
        "summary": "Get Rental By Id",
        "operationId": "getForGuest",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/stays": {
      "get": {
        "tags": [
          "Stays"
        ],
        "summary": "Get Stays List",
        "operationId": "getStays",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStay"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Stays"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add a new Stays",
        "operationId": "addStays",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStay"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateStay"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/stays/{id}": {
      "get": {
        "tags": [
          "Stays"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Get By Vessel Id"
          }
        ],
        "summary": "Get Stay By Id",
        "operationId": "getStayById",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStay"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Stays"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Vessel Id"
          },
          {
            "in": "path",
            "name": "vesselType",
            "schema": {
              "type": "string",
              "enum": [
                "STAY"
              ]
            },
            "required": true,
            "description": "Vessel Type {STAY,RENTAL,CHARTER}"
          }
        ],
        "summary": "Update a Stays",
        "operationId": "updateStays",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStay"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateStay"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Stays"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Vessel Id"
          },
          {
            "in": "path",
            "name": "vesselType",
            "schema": {
              "type": "string",
              "enum": [
                "STAY"
              ]
            },
            "required": true,
            "description": "Vessel Type {STAY,RENTAL,CHARTER}"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete a Stays",
        "operationId": "DeleteStays",
        "requestBody": {
          "content": {
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/stays/guest/{id}": {
      "get": {
        "tags": [
          "Guest User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Get By Vessel Id"
          }
        ],
        "summary": "Get Stay By Id",
        "operationId": "getStayByIdGuest",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStay"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/charters": {
      "get": {
        "tags": [
          "Charters"
        ],
        "summary": "Get Charters List",
        "operationId": "getCharters",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCharter"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Charters"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add a new Charter",
        "operationId": "addCharter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCharter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCharter"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/charters/{id}": {
      "get": {
        "tags": [
          "Charters"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Get By Vessel Id"
          }
        ],
        "summary": "Get Charters List",
        "operationId": "getCharterById",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCharter"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Charters"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Vessel Id"
          },
          {
            "in": "path",
            "name": "vesselType",
            "schema": {
              "type": "string",
              "enum": [
                "CHARTER"
              ]
            },
            "required": true,
            "description": "Vessel Type {STAY,RENTAL,CHARTER}"
          }
        ],
        "summary": "Update a Charter",
        "operationId": "updateCharter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCharter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCharter"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Charters"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Vessel Id"
          },
          {
            "in": "path",
            "name": "vesselType",
            "schema": {
              "type": "string",
              "enum": [
                "CHARTER"
              ]
            },
            "required": true,
            "description": "Vessel Type {STAY,RENTAL,CHARTER}"
          }
        ],
        "summary": "Delete a Charter",
        "operationId": "deleteCharter",
        "requestBody": {
          "content": {
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/charters/guest/{id}": {
      "get": {
        "tags": [
          "Guest User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Get By Vessel Id"
          }
        ],
        "summary": "Get Charters List",
        "operationId": "getCharterByIdGuest",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCharter"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/dashboard/listUsers": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get All Users List Dashboard",
        "operationId": "getUsersDash",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/dashboard/listVessels": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get All Vessels List Dashboard",
        "operationId": "getVesselsDash",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/favourite": {
      "get": {
        "tags": [
          "Favorite"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Favourite By User Id",
        "operationId": "getFavByUserId",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFavourite"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Favorite"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Add a new Favorite",
        "operationId": "addFavourite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFavourite"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFavourite"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/favourite/{id}": {
      "put": {
        "tags": [
          "Favorite"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Favourite Id"
          }
        ],
        "summary": "Update a Favorite",
        "operationId": "updateFavorite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFavourite"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFavourite"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Favorite"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Favourite Id"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete a Favorite",
        "operationId": "deleteFavorite",
        "requestBody": {
          "content": {
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin-panel-settings/availability": {
      "get": {
        "tags": [
          "Admin Panel Settings"
        ],
        "summary": "Get Availabilities List",
        "operationId": "getAvailabilities",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailability"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Admin Panel Settings"
        ],
        "summary": "Create Availability",
        "operationId": "addAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAvailability"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAvailability"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin-panel-settings/availability/{id}": {
      "get": {
        "tags": [
          "Admin Panel Settings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Get availability by Id"
          }
        ],
        "summary": "Get availability by Id",
        "operationId": "getAvailability",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAvailability"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Admin Panel Settings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Availability Id"
          }
        ],
        "summary": "Update Availability",
        "operationId": "updateAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAvailability"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAvailability"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Admin Panel Settings"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Availability Id"
          }
        ],
        "summary": "Delete Availability",
        "operationId": "deleteAvailability",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAvailability"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/signin": {
      "get": {
        "tags": [
          "Login"
        ],
        "summary": "User data - WebRTC",
        "operationId": "userDataWebRTC",
        "requestBody": {
          "description": "User Sign In Body",
          "content": {
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "email": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "userType": {
                      "type": "string"
                    },
                    "userInitials": {
                      "type": "string"
                    },
                    "theme": {
                      "type": "string",
                      "enum": [
                        "LIGHT",
                        "DARK"
                      ],
                      "default": "LIGHT"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Json"
          },
          "401": {
            "description": "Invalid Username or password",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid Username or password",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Login"
        ],
        "summary": "Sign In for a User",
        "operationId": "userSignIn",
        "requestBody": {
          "description": "User Sign In Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "userType": {
                      "type": "string"
                    },
                    "userInitials": {
                      "type": "string"
                    },
                    "theme": {
                      "type": "string",
                      "enum": [
                        "LIGHT",
                        "DARK"
                      ],
                      "default": "LIGHT"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Json"
          },
          "401": {
            "description": "Invalid Username or password",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid Username or password",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/setpassword": {
      "post": {
        "tags": [
          "Login"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Set a new Password for the user",
        "operationId": "setPassword",
        "requestBody": {
          "description": "New Password Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPasswordDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "message": {
                      "type": "string",
                      "default": "New password saved."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Json",
            "content": {
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false
                    },
                    "message": {
                      "type": "string",
                      "default": "Token is invalid!"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          }
        }
      }
    },
    "/biometricSignIn": {
      "post": {
        "tags": [
          "Login"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Used to login with biometric signature",
        "operationId": "biometricLogin",
        "requestBody": {
          "description": "Biometric Login",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "signature"
                ],
                "properties": {
                  "signature": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "token": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "userType": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Json"
          },
          "401": {
            "description": "Invalid Username or password",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid Username or password",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/validatePasswordToken/{token}": {
      "get": {
        "tags": [
          "Login"
        ],
        "summary": "Check if a token is valid for setting password.",
        "operationId": "validateToken",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "message": {
                      "type": "string",
                      "default": "New password saved."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Json",
            "content": {
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": false
                    },
                    "message": {
                      "type": "string",
                      "default": "Token is invalid!"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/forgetPassword": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Forget Password for a User",
        "operationId": "userForgetPassword",
        "requestBody": {
          "description": "Forget Password Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgetPasswordDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Json",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/updateUserInfo": {
      "put": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update User Info",
        "operationId": "userUpdateInfo",
        "requestBody": {
          "description": "Update User Info",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
              }
            }
          },
          "400": {
            "description": "Invalid Json",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/uploadImage": {
      "post": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Upload Image for user",
        "operationId": "uploadUserImagePost",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "upload image",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Upload Image for user",
        "operationId": "uploadUserImagePut",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "existingUrl": {
                    "type": "string",
                    "description": "URL of the previosly uploaded image."
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "update icon",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/deleteImage": {
      "delete": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Delete Image",
        "operationId": "deleteUserImageByUrl",
        "requestBody": {
          "content": {
          }
        },
        "responses": {
          "200": {
            "description": "delete Image",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/publicKey": {
      "put": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update Public Key for an User",
        "operationId": "userUpdatePublicKey",
        "requestBody": {
          "description": "Update Public Key Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "publicKey"
                ],
                "properties": {
                  "publicKey": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
              }
            }
          },
          "400": {
            "description": "Invalid Json",
            "content": {
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel/search": {
      "post": {
        "tags": [
          "Vessel"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vesselType": {
                    "type": "string",
                    "enum": [
                      "RENTAL",
                      "STAY",
                      "CHARTER"
                    ],
                    "default": "RENTAL"
                  },
                  "searchLocation": {
                    "type": "string"
                  },
                  "locationFrom": {
                    "type": "string"
                  },
                  "locationTo": {
                    "type": "string"
                  },
                  "minPrice": {
                    "type": "number"
                  },
                  "maxPrice": {
                    "type": "number"
                  },
                  "passengers": {
                    "type": "number"
                  },
                  "durationType": {
                    "type": "string",
                    "enum": [
                      "CALENDAR",
                      "FLEXIBLE"
                    ]
                  },
                  "durationFlexible": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "WEEKEND",
                          "WEEK",
                          "MONTH"
                        ]
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  },
                  "durationFrom": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "durationTo": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "features": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "categories": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "priceType": {
                    "type": "string",
                    "enum": [
                      "HOUR",
                      "DAY",
                      "WEEK"
                    ],
                    "default": "HOUR"
                  }
                }
              }
            }
          }
        },
        "summary": "Search Vessels",
        "operationId": "searchVessel",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {}
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/configuration": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "description": "Configurations Enum Currently Being Used: HOME_HERO_IMAGE, \n HOME_HERO_TEXT, \nHOME_INFORMATION_BANNER_TITLE, \nHOME_INFORMATION_BANNER_PAGE_CONTENT, \nGET_STARTED_TITLE, \nGET_STARTED_DESCRIPTION, \nGET_STARTED_IMAGE, \nPHOTO_MINIMUM_NUMBER, \nPHOTO_MAXIMUM_NUMBER, \nMAXIMUM_VESSEL_AGE, \nCRV_GREATER, \nCRV_GREATER_PASSENGER, \nSVOP_MED_SDV_BS_LESS_EQUAL, \nLimited_MASTER_60_MED_SDV_BS_LESS, \n MASTER_150_MED_BST_LESS_EQUAL, \nMASTER_500_MED_BST_LESS_EQUAL, ABOUT_WAVEZ_TITLE, ABOUT_WAVEZ_PAGE_CONTENT, PRIVACY_POLICY_TITLE, PRIVACY_POLICY_PAGE_CONTENT, PARTNERS_TITLE, PARTNERS_PAGE_CONTENT, TERMS_OF_SERVICE_TITLE, TERMS_OF_SERVICE_PAGE_CONTENT, CONTACT_US_TITLE, CONTACT_US_PAGE_CONTENT, HOW_IT_WORKS_TITLE, HOW_IT_WORKS_PAGE_CONTENT, HOW_IT_WORKS_ADMIN_PANEL",
        "summary": "Get All Configurations",
        "operationId": "getAllConfigurations",
        "responses": {
          "200": {
            "description": "get the list of all configurations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConfigurationModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Configurations Enum Currently Being Used: HOME_HERO_IMAGE, \n HOME_HERO_TEXT, \nHOME_INFORMATION_BANNER_TITLE, \nHOME_INFORMATION_BANNER_PAGE_CONTENT, \nGET_STARTED_TITLE, \nGET_STARTED_DESCRIPTION, \nGET_STARTED_IMAGE, \nPHOTO_MINIMUM_NUMBER, \nPHOTO_MAXIMUM_NUMBER, \nMAXIMUM_VESSEL_AGE, \nCRV_GREATER, \nCRV_GREATER_PASSENGER, \nSVOP_MED_SDV_BS_LESS_EQUAL, \nLimited_MASTER_60_MED_SDV_BS_LESS, \n MASTER_150_MED_BST_LESS_EQUAL, \nMASTER_500_MED_BST_LESS_EQUAL, ABOUT_WAVEZ_TITLE, ABOUT_WAVEZ_PAGE_CONTENT, PRIVACY_POLICY_TITLE, PRIVACY_POLICY_PAGE_CONTENT, PARTNERS_TITLE, PARTNERS_PAGE_CONTENT, TERMS_OF_SERVICE_TITLE, TERMS_OF_SERVICE_PAGE_CONTENT, CONTACT_US_TITLE, CONTACT_US_PAGE_CONTENT, HOW_IT_WORKS_TITLE, HOW_IT_WORKS_PAGE_CONTENT, HOW_IT_WORKS_ADMIN_PANEL, COMMUNITY_GUIDELINES_PAGE_CONTENT",
        "summary": "Add New Configurations (Authorization: [ADMIN])",
        "operationId": "addNewConfigurations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "new Configuration added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationModel"
                }
              }
            }
          }
        }
      }
    },
    "/configuration/{key}": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Get Configuration By Key",
        "operationId": "getConfigurationByKey",
        "description": "Configurations Enum Currently Being Used: HOME_HERO_IMAGE, \n HOME_HERO_TEXT, \nHOME_INFORMATION_BANNER_TITLE, \nHOME_INFORMATION_BANNER_PAGE_CONTENT, \nGET_STARTED_TITLE, \nGET_STARTED_DESCRIPTION, \nGET_STARTED_IMAGE, \nPHOTO_MINIMUM_NUMBER, \nPHOTO_MAXIMUM_NUMBER, \nMAXIMUM_VESSEL_AGE, \nCRV_GREATER, \nCRV_GREATER_PASSENGER, \nSVOP_MED_SDV_BS_LESS_EQUAL, \nLimited_MASTER_60_MED_SDV_BS_LESS, \n MASTER_150_MED_BST_LESS_EQUAL, \nMASTER_500_MED_BST_LESS_EQUAL, ABOUT_WAVEZ_TITLE, ABOUT_WAVEZ_PAGE_CONTENT, PRIVACY_POLICY_TITLE, PRIVACY_POLICY_PAGE_CONTENT, PARTNERS_TITLE, PARTNERS_PAGE_CONTENT, TERMS_OF_SERVICE_TITLE, TERMS_OF_SERVICE_PAGE_CONTENT, CONTACT_US_TITLE, CONTACT_US_PAGE_CONTENT, HOW_IT_WORKS_TITLE, HOW_IT_WORKS_PAGE_CONTENT, COMMUNITY_GUIDELINES_PAGE_CONTENT",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get configuration by key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationModel"
                }
              }
            }
          },
          "404": {
            "description": "configuration not found",
            "content": {
              "application/json": {
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Configurations Enum Currently Being Used: HOME_HERO_IMAGE, \n HOME_HERO_TEXT, \nHOME_INFORMATION_BANNER_TITLE, \nHOME_INFORMATION_BANNER_PAGE_CONTENT, \nGET_STARTED_TITLE, \nGET_STARTED_DESCRIPTION, \nGET_STARTED_IMAGE, \nPHOTO_MINIMUM_NUMBER, \nPHOTO_MAXIMUM_NUMBER, \nMAXIMUM_VESSEL_AGE, \nCRV_GREATER, \nCRV_GREATER_PASSENGER, \nSVOP_MED_SDV_BS_LESS_EQUAL, \nLimited_MASTER_60_MED_SDV_BS_LESS, \n MASTER_150_MED_BST_LESS_EQUAL, \nMASTER_500_MED_BST_LESS_EQUAL, ABOUT_WAVEZ_TITLE, ABOUT_WAVEZ_PAGE_CONTENT, PRIVACY_POLICY_TITLE, PRIVACY_POLICY_PAGE_CONTENT, PARTNERS_TITLE, PARTNERS_PAGE_CONTENT, TERMS_OF_SERVICE_TITLE, TERMS_OF_SERVICE_PAGE_CONTENT, CONTACT_US_TITLE, CONTACT_US_PAGE_CONTENT, HOW_IT_WORKS_TITLE, HOW_IT_WORKS_PAGE_CONTENT, HOW_IT_WORKS_ADMIN_PANEL, COMMUNITY_GUIDELINES_PAGE_CONTENT",
        "summary": "Update Configuration By Key (Authorization: [ADMIN])",
        "operationId": "updateConfigurationByKey",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigurationDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "update configuration by key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete Configuration By Key (Authorization: [ADMIN])",
        "operationId": "deleteConfigurationByKey",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Configurations Enum Currently Being Used: HOME_HERO_IMAGE, \n HOME_HERO_TEXT, \nHOME_INFORMATION_BANNER_TITLE, \nNOME_INFORMATION_BANNER_PAGE_CONTENT, \nGET_STARTED_TITLE, \nGET_STARTED_DESCRIPTION, \nGET_STARTED_IMAGE, \nPHOTO_MINIMUM_NUMBER, \nPHOTO_MAXIMUM_NUMBER, \nMAXIMUM_VESSEL_AGE, \nCRV_GREATER, \nCRV_GREATER_PASSENGER, \nSVOP_MED_SDV_BS_LESS_EQUAL, \nLimited_MASTER_60_MED_SDV_BS_LESS, \n MASTER_150_MED_BST_LESS_EQUAL, \nMASTER_500_MED_BST_LESS_EQUAL, ABOUT_WAVEZ_TITLE, ABOUT_WAVEZ_PAGE_CONTENT, PRIVACY_POLICY_TITLE, PRIVACY_POLICY_PAGE_CONTENT, PARTNERS_TITLE, PARTNERS_PAGE_CONTENT, TERMS_OF_SERVICE_TITLE, TERMS_OF_SERVICE_PAGE_CONTENT, CONTACT_US_TITLE, CONTACT_US_PAGE_CONTENT, HOW_IT_WORKS_TITLE, HOW_IT_WORKS_PAGE_CONTENT, COMMUNITY_GUIDELINES_PAGE_CONTENT",
        "responses": {
          "200": {
            "description": "delete configuration by key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationModel"
                }
              }
            }
          }
        }
      }
    },
    "/configuration/uploadImage/{key}": {
      "post": {
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Upload Images for configuration By Key (Authorization: [ADMIN])",
        "operationId": "uploadConfigurationImageByKey",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "description": "Configurations Enum Currently Being Used: HOME_HERO_IMAGE, \n HOME_HERO_TEXT, \nHOME_INFORMATION_BANNER_TITLE, \nNOME_INFORMATION_BANNER_PAGE_CONTENT, \nGET_STARTED_TITLE, \nGET_STARTED_DESCRIPTION, \nGET_STARTED_IMAGE",
        "responses": {
          "200": {
            "description": "upload configuration image by key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/configuration/updateImage": {
      "put": {
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update the already Uploaded Images for configuration By Url (Authorization: [ADMIN])",
        "operationId": "updateConfigurationImageByUrl",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "existingUrl": {
                    "type": "string",
                    "description": "URL of the previosly uploaded image."
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "description": "Configurations Enum Currently Being Used: HOME_HERO_IMAGE, \n HOME_HERO_TEXT, \nHOME_INFORMATION_BANNER_TITLE, \nNOME_INFORMATION_BANNER_PAGE_CONTENT, \nGET_STARTED_TITLE, \nGET_STARTED_DESCRIPTION, \nGET_STARTED_IMAGE",
        "responses": {
          "200": {
            "description": "update configuration image by url",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/configuration/deleteImage": {
      "delete": {
        "tags": [
          "Configuration"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Delete Images for configuration By url (Authorization: [ADMIN])",
        "operationId": "deleteConfigurationImageByUrl",
        "description": "Configurations Enum Currently Being Used: HOME_HERO_IMAGE, \n HOME_HERO_TEXT, \nHOME_INFORMATION_BANNER_TITLE, \nNOME_INFORMATION_BANNER_PAGE_CONTENT, \nGET_STARTED_TITLE, \nGET_STARTED_DESCRIPTION, \nGET_STARTED_IMAGE",
        "responses": {
          "200": {
            "description": "delete configuration image by url",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vessel/updateVesselSequence/{vesselType}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "vesselType",
            "schema": {
              "type": "string",
              "enum": [
                "RENTAL",
                "STAY",
                "CHARTER"
              ]
            },
            "required": true,
            "description": "Vessel Type {STAY,RENTAL,CHARTER}"
          }
        ],
        "summary": "Updates the sequence of the vessels (Authorization: [ADMIN])",
        "operationId": "updateVesselSequence",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "sequence": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "description": "Updates the sequence of the vessels for each vessel types with their ids (use -1 as sequence to delete a featured listing) [Authorization: ADMIN]",
        "responses": {
          "200": {
            "description": "updated sequence",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vessel/getFeaturedListings": {
      "get": {
        "tags": [
          "Vessel"
        ],
        "summary": "Get the featured listings",
        "operationId": "getFeaturedListings",
        "description": "Get Featured Listings",
        "responses": {
          "200": {
            "description": "featured Listings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rentals": {
                      "$ref": "#/components/schemas/GetRental"
                    },
                    "charters": {
                      "$ref": "#/components/schemas/GetCharter"
                    },
                    "stays": {
                      "$ref": "#/components/schemas/GetStay"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event/search": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "search timeslots for vessels.",
        "summary": "search timeslots for vessels.",
        "operationId": "searchEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vesselIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "start": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "end": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "search events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/event/checkAvailability": {
      "post": {
        "tags": [
          "Guest User"
        ],
        "description": "check for vessel availability",
        "operationId": "checkAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vesselId": {
                    "type": "string"
                  },
                  "start": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "end": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "numberOfGuests": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "search events",
            "content": {
            }
          }
        }
      }
    },
    "/event/calculateBookingInfo": {
      "post": {
        "tags": [
          "Guest User"
        ],
        "description": "check for vessel availability with tax rate",
        "operationId": "calculateBookingInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vesselId": {
                    "type": "string"
                  },
                  "start": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "end": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "numberOfGuests": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "search events",
            "content": {
            }
          }
        }
      }
    },
    "/event/bookVessel": {
      "post": {
        "tags": [
          "Vessel"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Booking for a vessel",
        "operationId": "bookVessel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookingVessel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Booked Event",
            "content": {
            }
          }
        }
      }
    },
    "/event/blockTimeslot/{vesselId}": {
      "post": {
        "tags": [
          "Calendar"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "vesselId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Block a timeslot for an vessel by Id.",
        "summary": "Block a timeslot for an vessel by Id.",
        "operationId": "blockTimeslot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockEventDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "event blocked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/event/blockTimeslot/{eventId}": {
      "put": {
        "tags": [
          "Calendar"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "updated Blocked timeslot event by Id.",
        "summary": "updated Blocked timeslot event by Id.",
        "operationId": "updateBlockedTimeslot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockEventDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "event updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Calendar"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "delete Blocked timeslot event by Id.",
        "summary": "delete Blocked timeslot event by Id.",
        "operationId": "deleteBlockedTimeslot",
        "responses": {
          "200": {
            "description": "event updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/event/unBlockTimeslot/{vesselId}": {
      "put": {
        "tags": [
          "Calendar"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "vesselId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Make a timeslot available for an vessel by Id.",
        "summary": "Make a timeslot available for an vessel by Id.",
        "operationId": "unBlockTimeslot",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BlockEventDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "event blocked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/vessel/getAllListings": {
      "get": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "f",
            "description": "Filter for searching the vessels by text",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "p",
            "description": "Page number for the vessels list (Starts from 1 and the default is 1)",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "s",
            "description": "Size limit for vessels list (default: 5)",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "o",
            "description": "Name of the field for sorting vessels list (By default sorts in asc order but to sort in desc put '-' in front Eg: '-title')",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Get All Listings.",
        "summary": "Get All Listings.",
        "operationId": "getAllListings",
        "responses": {
          "200": {
            "description": "event updated",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/vessel/guest/{id}": {
      "get": {
        "tags": [
          "Guest User"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Get By Vessel Id"
          }
        ],
        "summary": "Get Vessel By Id",
        "operationId": "getVesselByIdForGuest",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vessel/{id}": {
      "get": {
        "tags": [
          "Vessel"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Get By Vessel Id"
          }
        ],
        "summary": "Get Vessel By Id",
        "operationId": "getVesselById",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Vessel"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Update By Vessel Id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCharter"
              }
            }
          }
        },
        "summary": "Update Vessel By Id",
        "operationId": "getVesselById",
        "responses": {
          "200": {
            "description": "Operation Successful",
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/list": {
      "get": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "f",
            "description": "Filter for searching the users by text",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "p",
            "description": "Page number for the users list (Starts from 1 and the default is 1)",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "s",
            "description": "Size limit for users list (default: 5)",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "o",
            "description": "Name of the field for sorting users list (By default sorts in asc order but to sort in desc put '-' in front Eg: '-title')",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "List Users.",
        "summary": "List Users.",
        "operationId": "listAllListings",
        "responses": {
          "200": {
            "description": "users list",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "description": "user Id for getting the user details",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Get User By Id.",
        "summary": "Get User By Id.",
        "operationId": "getUserDetailsById",
        "responses": {
          "200": {
            "description": "user details",
            "content": {
              "application/json": {
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "description": "user Id for deleting the user",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Delete User By Id.",
        "summary": "Delete User By Id.",
        "operationId": "deleteUserById",
        "responses": {
          "200": {
            "description": "user deleted",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/users/history/{userId}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "description": "user Id for getting the user history",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "description": "Get User Booking History By Id.",
        "summary": "Get User Booking History By Id.",
        "operationId": "getUserHistoryByUserId",
        "responses": {
          "200": {
            "description": "user history",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/users/changeUserStatus/{userId}": {
      "put": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "description": "user Id for changing the user status",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "disabled": {
                    "type": "boolean",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "description": "Change User Status By Id.",
        "summary": "Change User Status By Id.",
        "operationId": "changeUserStatusById",
        "responses": {
          "200": {
            "description": "succeded",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/users/sendEmail": {
      "post": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "send emails to users from admin panel.",
        "summary": "send emails to users from admin panel",
        "operationId": "sendEmailToUserFromAdmin",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "emails",
                  "body",
                  "subject"
                ],
                "properties": {
                  "emails": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "cc": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "bcc": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "subject": {
                    "type": "string"
                  },
                  "body": {
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "email sent",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/users/emailSearch": {
      "get": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "searchText",
            "description": "search text for email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "search user emails for admin panel.",
        "summary": "search user emails for admin panel",
        "operationId": "searchUserEmails",
        "responses": {
          "200": {
            "description": "email list",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/users/createSavePaymentIntent": {
      "get": {
        "tags": [
          "Payment"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "create client id for user from setup intent",
        "summary": "create client id for user from setup intent",
        "operationId": "createSavePaymentClientId",
        "responses": {
          "200": {
            "description": "client id",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/users/savedPaymentMethods": {
      "get": {
        "tags": [
          "Payment"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "get user's saved payment methods",
        "summary": "get user's saved payment methods",
        "operationId": "getSavedPaymentMethods",
        "responses": {
          "200": {
            "description": "payment methods",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/users/paymentMethod/{paymentMethodId}": {
      "delete": {
        "tags": [
          "Payment"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "paymentMethodId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Payment Method Id"
          }
        ],
        "description": "delete user's payment method by Id",
        "summary": "delete user's payment method by Id",
        "operationId": "deletePaymentMethodById",
        "responses": {
          "200": {
            "description": "delete response",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/users/AddNewPayoutMethod": {
      "post": {
        "tags": [
          "Payment"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "create new payout method for user",
        "summary": "create new payout method for user",
        "operationId": "createNewPayoutMethodUser",
        "responses": {
          "200": {
            "description": "created response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "connectOnBoardingUrl": {
                      "type": "string",
                      "description": "The url generated for redirecting user to complete their connect onboarding"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/getPayoutMethods": {
      "get": {
        "tags": [
          "Payment"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "get payout method of user",
        "summary": "get payout method of user",
        "operationId": "getPayoutMethodsUser",
        "responses": {
          "200": {
            "description": "fetched response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "payoutMethods": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/checkPayoutVerificationStatus": {
      "get": {
        "tags": [
          "Payment"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "get payout verification status of user",
        "summary": "get payout verification status of user",
        "operationId": "getPayoutVerificationStatusUser",
        "responses": {
          "200": {
            "description": "fetched response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "payoutsEnabled": {
                      "type": "boolean"
                    },
                    "detailsSubmitted": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/generateStripeDashboardLink": {
      "get": {
        "tags": [
          "Payment"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "generate stripe dashboard link for user",
        "summary": "generate stripe dashboard link for user",
        "operationId": "generateStripeDashboardLinkUser",
        "responses": {
          "200": {
            "description": "fetched response",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "default": true
                    },
                    "stripeDashboardUrl": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vessel/getAllTaxRates": {
      "get": {
        "tags": [
          "Payment"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "get all tax rates",
        "summary": "get all tax rates",
        "operationId": "getAllTaxRates",
        "responses": {
          "200": {
            "description": "fetched response",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/v4/initiate": {
      "post": {
        "tags": [
          "Jumio"
        ],
        "deprecated": true,
        "security": [
          {
            "BasicAuth": []
          }
        ],
        "parameters": [
          {
            "name": "Content-Length",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User-Agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Access-Control-Allow-Origin",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Request Jumio Id Verification",
        "operationId": "requestJumioIdVerification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JumioDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Verification Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JumioResponse"
                }
              }
            }
          }
        }
      }
    },
    "/docv/testauthentication": {
      "get": {
        "tags": [
          "Trulioo"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Test Authentication with Trulioo Server",
        "operationId": "truliooAuth",
        "requestBody": {
          "content": {
            "application/json": {
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trulioo Response",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/docv/countrycodes/IdentityVerification": {
      "get": {
        "tags": [
          "Trulioo"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Countries List Supported",
        "operationId": "truliooCountries",
        "requestBody": {
          "content": {
            "application/json": {
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trulioo Response",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/docv/documentTypes/{country}": {
      "get": {
        "tags": [
          "Trulioo"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "country",
            "description": "Country Two Prefix Code",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Get Document Of Provider Countries",
        "operationId": "truliooDocumentsCountries",
        "requestBody": {
          "content": {
            "application/json": {
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trulioo Response",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/docv/verify": {
      "post": {
        "tags": [
          "Trulioo"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Document Verification",
        "operationId": "truliooDoc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TruliooVerfiyDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trulioo Response",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/docv/transactionrecord/{transactionRecordID}": {
      "get": {
        "tags": [
          "Trulioo"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "transactionRecordID",
            "description": "Transaction Record ID",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Get Transaction Record (w/ Document Image)",
        "operationId": "truliooTransactionRecord",
        "requestBody": {
          "content": {
            "application/json": {
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trulioo Response",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/docv/getVRecordByUserId": {
      "get": {
        "tags": [
          "Trulioo"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Record By User Id",
        "operationId": "getRecord",
        "requestBody": {
          "content": {
            "application/json": {
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trulioo Response",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/docv/getVRecordByUserId/{id}": {
      "get": {
        "tags": [
          "Trulioo"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "description": "User Id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "summary": "Get Record By User Id",
        "operationId": "getRecord",
        "requestBody": {
          "content": {
            "application/json": {
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trulioo Response",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/docv/getAllRecords": {
      "get": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Verified Records",
        "operationId": "getAllRecords",
        "requestBody": {
          "content": {
            "application/json": {
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trulioo Response",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/docv/getVRecord/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Record by id",
        "operationId": "getRById",
        "requestBody": {
          "content": {
            "application/json": {
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trulioo Response",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/faq": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Get all ths Faqs",
        "summary": "Get all ths Faqs",
        "operationId": "getAllFaqs",
        "responses": {
          "200": {
            "description": "get the list of all faqs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Faq"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Add New Faq",
        "summary": "Add New Faq",
        "operationId": "addNewFaq",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "new Configuration added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationModel"
                }
              }
            }
          }
        }
      }
    },
    "/faq/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Faq By Id",
        "operationId": "getFaqById",
        "description": "Get Faq By Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get faq by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Faq"
                }
              }
            }
          },
          "404": {
            "description": "Faq not found",
            "content": {
              "application/json": {
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Update Faq By Id",
        "summary": "Update Faq By Id (Authorization: [ADMIN])",
        "operationId": "updateFaqById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FaqDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "update Faq by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Faq"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete Faq By Id (Authorization: [ADMIN])",
        "operationId": "deleteFaqById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete Faq By Id",
        "responses": {
          "200": {
            "description": "delete Faq by Id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Faq"
                }
              }
            }
          }
        }
      }
    },
    "/reports": {
      "get": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Get all ths Reports",
        "summary": "Get all ths Reports",
        "operationId": "getAllReports",
        "responses": {
          "200": {
            "description": "get the list of all Reports",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            }
          }
        }
      }
    },
    "/reports/{tripId}": {
      "post": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Add New Report",
        "parameters": [
          {
            "name": "tripId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Add New Report",
        "operationId": "addNewReport",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ReportDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "new report added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            }
          }
        }
      }
    },
    "/reports/{id}": {
      "get": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get report By Id",
        "operationId": "getReportById",
        "description": "Get Report By Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get report by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            }
          },
          "404": {
            "description": "Report not found",
            "content": {
              "application/json": {
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Update Report By Id",
        "summary": "Update Report By Id (Authorization: [ADMIN])",
        "operationId": "updateReportById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ReportDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "update Report by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete Report By Id (Authorization: [ADMIN])",
        "operationId": "deleteReportById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete Report By Id",
        "responses": {
          "200": {
            "description": "delete Faq by Id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Report"
                }
              }
            }
          }
        }
      }
    },
    "/trip/{id}": {
      "get": {
        "tags": [
          "Trip"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get trip By Id",
        "operationId": "gettripById",
        "description": "Get Trip By Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get trip by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          },
          "404": {
            "description": "Trip not found",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/trip/getTripsByStatusRenter/{status}": {
      "get": {
        "tags": [
          "Trip"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Trips by status for renter",
        "operationId": "getTripsStatusRenter",
        "description": "Get Trips By status for Renter",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PAST",
                "ONGOING",
                "UPCOMING",
                "OFFER"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Trips by status for renter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          }
        }
      }
    },
    "/trip/getTripsByStatusOwner/{status}": {
      "get": {
        "tags": [
          "Trip"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Trips by status for vessel owner",
        "operationId": "getTripsStatusOwnerDep",
        "description": "Get Trips By status for owner",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PAST",
                "ONGOING",
                "UPCOMING",
                "OFFER"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Trips by status for owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          }
        }
      }
    },
    "/trip/vesselOwner/{status}/{id}": {
      "get": {
        "tags": [
          "Trip"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "deprecated": true,
        "summary": "Get Trips by status for vessel owner",
        "operationId": "getTripsStatusOwner",
        "description": "Get Trips by status for vessel owner",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "PAST",
                "ONGOING",
                "UPCOMING",
                "OFFER"
              ]
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Trips by status for renter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          }
        }
      }
    },
    "/trip/cancel": {
      "put": {
        "tags": [
          "Trip"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Cancel trip by either vessel owner or renter",
        "summary": "Cancel trip by either vessel owner or renter",
        "operationId": "cancelTrip",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "tripId",
                  "cancelReason"
                ],
                "properties": {
                  "tripId": {
                    "type": "string"
                  },
                  "cancelReason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "trip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          }
        }
      }
    },
    "/trip/acceptOffer": {
      "put": {
        "tags": [
          "Trip"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Accept Offer by vessel owner",
        "summary": "Accept Offer by vessel owner",
        "operationId": "acceptOfferTrip",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "tripId"
                ],
                "properties": {
                  "tripId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "trip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          }
        }
      }
    },
    "/trip/rejectOffer": {
      "put": {
        "tags": [
          "Trip"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Reject Offer by vessel owner",
        "summary": "Reject Offer by vessel owner",
        "operationId": "rejectOfferTrip",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "tripId"
                ],
                "properties": {
                  "tripId": {
                    "type": "string"
                  },
                  "rejectReason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "trip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          }
        }
      }
    },
    "/trip/start": {
      "put": {
        "tags": [
          "Trip"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Start Trip renter",
        "summary": "Start Trip renter",
        "operationId": "startTrip",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "tripId"
                ],
                "properties": {
                  "tripId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          }
        }
      }
    },
    "/trip/end": {
      "put": {
        "tags": [
          "Trip"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "End Trip renter",
        "summary": "End Trip renter",
        "operationId": "endTrip",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "tripId"
                ],
                "properties": {
                  "tripId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          }
        }
      }
    },
    "/trip/book": {
      "post": {
        "tags": [
          "Trip"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Create Trip renter",
        "summary": "Create Trip renter",
        "operationId": "createTrip",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TripDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          }
        }
      }
    },
    "/trip/tempBooking": {
      "post": {
        "tags": [
          "Trip"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Create Temp Trip booking",
        "summary": "Create Temp Trip booking [for testing]",
        "operationId": "createTempTrip",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TempTripDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trip",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Trip"
                }
              }
            }
          }
        }
      }
    },
    "/reviews/vesselReviews/{vesselId}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "parameters": [
          {
            "name": "vesselId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "p",
            "description": "Page number for the reviews list (Starts from 1 and the default is 1)",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "s",
            "description": "Size limit for reviews list (default: 5)",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "o",
            "description": "Name of the field for sorting users list (By default sorts in asc order but to sort in desc put '-' in front Eg: '-title')",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "List Reviews by Vessel Id",
        "summary": "List Reviews by Vessel Id",
        "operationId": "listReviewsByVesselId",
        "responses": {
          "200": {
            "description": "reviews list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          }
        }
      }
    },
    "/reviews/featuredReviews": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "description": "List Featured Reviews",
        "summary": "List Featured Reviews",
        "operationId": "listFeaturedReviews",
        "responses": {
          "200": {
            "description": "featured reviews list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reviews/{id}": {
      "get": {
        "tags": [
          "Reviews"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Get Review By Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Get Review By Id",
        "operationId": "getReviewById",
        "responses": {
          "200": {
            "description": "review fetched",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Delete Review By Id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Delete Review By Id",
        "operationId": "deleteReviewById",
        "responses": {
          "200": {
            "description": "review deleted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          }
        }
      }
    },
    "/reviews/{vesselId}": {
      "post": {
        "tags": [
          "Reviews"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Add New Review",
        "parameters": [
          {
            "name": "vesselId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Add New Review",
        "operationId": "addNewReview",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReviewDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "new review added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          }
        }
      }
    },
    "/reviews/updateReviewsSequence": {
      "put": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Updates the sequence of the Reviews (Authorization: [ADMIN])",
        "operationId": "updateReviewSequence",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "sequence": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "description": "Updates the sequence of the reviews (use -1 as sequence to delete a featured review) [Authorization: ADMIN]",
        "responses": {
          "200": {
            "description": "updated sequence",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reviews/list": {
      "get": {
        "tags": [
          "Admin"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "f",
            "description": "Filter for searching the reviews by text",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "p",
            "description": "Page number for the reviews list (Starts from 1 and the default is 1)",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "s",
            "description": "Size limit for reviews list (default: 5)",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "o",
            "description": "Name of the field for sorting reviews list (By default sorts in asc order but to sort in desc put '-' in front Eg: '-title')",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "List Reviews.",
        "summary": "List Reviews.",
        "operationId": "listAllReviews",
        "responses": {
          "200": {
            "description": "reviews list",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/conversations/save": {
      "post": {
        "tags": [
          "Conversation"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Save a new conversation",
        "operationId": "saveConversation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "hasMessages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "string"
                        },
                        "seen": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Save a new conversation",
        "responses": {
          "200": {
            "description": "Saved conversation",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/conversations/hide": {
      "put": {
        "tags": [
          "Conversation"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Hide a conversation",
        "operationId": "hideConversation",
        "description": "Hide a conversation",
        "responses": {
          "200": {
            "description": "Saved conversation",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/conversations/getConversationByUserId": {
      "get": {
        "tags": [
          "Conversation"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Get Conversations By User Id",
        "summary": "Get Conversations By User Id",
        "operationId": "getConversationsById",
        "responses": {
          "200": {
            "description": "Conversations Fetched",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "members": {
                        "type": "array"
                      },
                      "_id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conversations/seenChange": {
      "put": {
        "tags": [
          "Message"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Update seen status",
        "operationId": "updateSeenMessage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "conversationId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "description": "Update seen status",
        "responses": {
          "200": {
            "description": "Update seen status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/messages/save": {
      "post": {
        "tags": [
          "Message"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Save a new message",
        "operationId": "saveMessage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "conversationId": {
                    "type": "string"
                  },
                  "text": {
                    "type": "string"
                  },
                  "receiverId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "description": "Save a new message",
        "responses": {
          "200": {
            "description": "Saved message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "conversationId": {
                      "type": "string"
                    },
                    "sender": {
                      "type": "string"
                    },
                    "text": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/messages/uploadImage": {
      "post": {
        "tags": [
          "Message"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Upload Image for user message",
        "operationId": "uploadUserImagePostMessage",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "upload image",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{userId}": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Save or Update Notifications",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "operationId": "sOrUNotif",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "listings": {
                    "type": "number"
                  },
                  "trips": {
                    "type": "number"
                  },
                  "conversations": {
                    "type": "number"
                  },
                  "verifications": {
                    "type": "number"
                  },
                  "reports": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "description": "Save Or Update Notifications",
        "responses": {
          "200": {
            "description": "Saved or Updated message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "string"
                    },
                    "listings": {
                      "type": "number"
                    },
                    "trips": {
                      "type": "number"
                    },
                    "conversations": {
                      "type": "number"
                    },
                    "verifications": {
                      "type": "number"
                    },
                    "reports": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Get Notifications",
        "operationId": "GetNotif",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Get Notifications",
        "responses": {
          "200": {
            "description": "Saved or Updated message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "string"
                    },
                    "listings": {
                      "type": "number"
                    },
                    "trips": {
                      "type": "number"
                    },
                    "conversations": {
                      "type": "number"
                    },
                    "verifications": {
                      "type": "number"
                    },
                    "reports": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/sendNotificationToAllUsers": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Send Notification To All User",
        "operationId": "SendNTAlUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "headings": {
                    "type": "string"
                  },
                  "contents": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "description": "Send Notification To All User",
        "responses": {
          "200": {
            "description": "Sent Notification",
            "content": {
            }
          }
        }
      }
    },
    "/notifications/sendNotificationToCallUser": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Send Notification To call receiver",
        "operationId": "SendNTCallUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "receiverId": {
                    "type": "string"
                  },
                  "headings": {
                    "type": "string"
                  },
                  "contents": {
                    "type": "string"
                  },
                  "socketId": {
                    "type": "string"
                  },
                  "userId": {
                    "type": "string"
                  },
                  "roomId": {
                    "type": "string"
                  },
                  "additionalDataOne": {
                    "type": "string"
                  },
                  "additionalDataTwo": {
                    "type": "string"
                  },
                  "additionalDataThree": {
                    "type": "string"
                  },
                  "additionalDataFour": {
                    "type": "string"
                  },
                  "additionalDataFive": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "description": "Send Notification To call receiver",
        "responses": {
          "200": {
            "description": "Sent Notification To call receiver",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "recipients": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "external_id": {
                      "type": "string",
                      "format": "nullable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/notifications/sendNotificationTwentyFourTripUser": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Send Notification Renter for a twenty four hour notice",
        "operationId": "SendNTTWTripUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "headings": {
                    "type": "string"
                  },
                  "contents": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "description": "Send Notification Renter for a twenty four hour notice",
        "responses": {
          "200": {
            "description": "Sent Notification",
            "content": {
            }
          }
        }
      }
    },
    "/messages/{conversationId}": {
      "get": {
        "tags": [
          "Message"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "conversationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Get Messages By Conversation Id",
        "summary": "Get Messages By Conversation Id",
        "operationId": "getMessagesById",
        "responses": {
          "200": {
            "description": "Messages Fetched",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "conversationId": {
                        "type": "string"
                      },
                      "_id": {
                        "type": "string"
                      },
                      "sender": {
                        "type": "string"
                      },
                      "text": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/conversations/{id}": {
      "delete": {
        "tags": [
          "Conversation"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Delete Conversation By Conversation Id",
        "summary": "Delete Conversation By Conversation Id",
        "operationId": "deletesById",
        "responses": {
          "200": {
            "description": "Conversation Fetched",
            "content": {
            }
          }
        }
      }
    },
    "/reportedPlaces/list": {
      "get": {
        "tags": [
          "ReportedPlaces"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "latitude",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "description": "List Reported Places Within given lat and lang (50Km). coordinates in format [longitude, latitude]",
        "summary": "List Reported Places Within given lat and lang (50Km).",
        "operationId": "listAllReportedPlaces",
        "responses": {
          "200": {
            "description": "reported places list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "location": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "Point"
                          },
                          "coordinates": {
                            "description": "Its in format [longitude, latitude]",
                            "type": "array",
                            "items": {
                              "type": "number"
                            },
                            "default": [
                              0,
                              0
                            ]
                          }
                        }
                      },
                      "addedBy": {
                        "type": "string"
                      },
                      "calculatedDistance": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reportedPlaces": {
      "post": {
        "tags": [
          "ReportedPlaces"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Add New Reported Place",
        "summary": "Add New Reported Place",
        "operationId": "addNewPlace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "reported places list",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "location": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "default": "Point"
                        },
                        "coordinates": {
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "default": [
                            0,
                            0
                          ]
                        }
                      }
                    },
                    "addedBy": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/uploadVesselLicense": {
      "post": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Upload User Vessel License",
        "summary": "Upload User Vessel License",
        "operationId": "uploadUserVesselLicense",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "licenseFront": {
                    "type": "string",
                    "format": "binary"
                  },
                  "licenseBack": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "upload response",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/users/vesselLicense": {
      "get": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Get Uploaded User Vessel License",
        "summary": "Get Uploaded User Vessel License",
        "operationId": "getUserVesselLicense",
        "responses": {
          "200": {
            "description": "user vessel licenses",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/liveNavigation/{tripId}": {
      "get": {
        "tags": [
          "Live Navigation"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "tripId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Get navigation ata by trip id",
        "summary": "Get navigation ata by trip id",
        "operationId": "navigationByTripId",
        "responses": {
          "200": {
            "description": "navigation data list",
            "content": {
              "application/json": {
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Live Navigation"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "tripId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "get speed by coordinates (5 sec interval)",
        "summary": "get speed by coordinates (5 sec interval)",
        "operationId": "getSpeedByTripId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "longitude",
                  "latitude",
                  "resetCalculation"
                ],
                "properties": {
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  },
                  "resetCalculation": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "navigation data saved",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/travelDestinations/list": {
      "get": {
        "tags": [
          "Travel Destinations"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "latitude",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "description": "List Travel Destinations Within given lat and lang (50Km). coordinates in format [longitude, latitude]",
        "summary": "List Travel Destinations Within given lat and lang (50Km). coordinates in format [longitude, latitude]",
        "operationId": "listAllTravelDestinations",
        "responses": {
          "200": {
            "description": "travel destinations list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "location": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "default": "Point"
                          },
                          "coordinates": {
                            "description": "Its in format [longitude, latitude]",
                            "type": "array",
                            "items": {
                              "type": "number"
                            },
                            "default": [
                              0,
                              0
                            ]
                          }
                        }
                      },
                      "calculatedDistance": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/travelDestinations": {
      "post": {
        "tags": [
          "Travel Destinations"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Add New Travel Destination [Authorization:Admin]",
        "summary": "Add New Travel Destination [Authorization:Admin]",
        "operationId": "addNewTravelDestination",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "longitude": {
                    "type": "number"
                  },
                  "latitude": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "travel destination added",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "location": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "default": "Point"
                        },
                        "coordinates": {
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "default": [
                            0,
                            0
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trip/checkUserVerificationStatusForReserving/{vesselId}": {
      "get": {
        "tags": [
          "Trip"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "vesselId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "check the user verification status before reserving vessel",
        "summary": "check the user verification status before reserving vessel",
        "operationId": "checkUserVerificationStatusReserve",
        "responses": {
          "200": {
            "description": "verification status",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "identityStatus": {
                      "type": "string",
                      "enum": ["NOT_PROVIDED", "PROVIDED", "VERIFIED"],
                      "default": "NOT_PROVIDED"
                    },
                    "vesselLicenseVerificationStatus": {
                      "type": "string",
                      "enum": ["NOT_PROVIDED", "PROVIDED", "VERIFIED"],
                      "default": "NOT_PROVIDED"
                    },
                    "vesselType": {
                      "type": "string",
                      "enum": ["RENTAL", "CHARTER", "STAY"]
                    },
                    "success": {
                      "type": "boolean",
                      "default": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/requestAccountDeletion": {
      "delete": {
        "tags": [
          "User"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "Request Account Deletion",
        "summary": "Request Account Deletion",
        "operationId": "requestAccountDeletion",
        "responses": {
          "200": {
            "description": "deletion result",
            "content": {
              "application/json": {
              }
            }
          }
        }
      }
    },
    "/trip/checkTripStartValidity/{tripId}": {
      "get": {
        "tags": [
          "Trip"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "tripId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hourlyInterval",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "description": "Check If Trip can be started",
        "summary": "Check If Trip can be started",
        "operationId": "Check If Trip can be started",
        "responses": {
          "200": {
            "description": "Trip can be started or not result.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "canStart": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": [
          "firstName",
          "lastName",
          "email",
          "phoneNumber",
          "agreementAccepted"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Wave"
          },
          "lastName": {
            "type": "string",
            "example": "Last"
          },
          "profileImageUrl": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "number"
          },
          "userAddress": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "province": {
                "type": "string"
              }
            }
          },
          "primaryLanguage": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "type": "string"
          },
          "rawAddress": {
            "type": "string"
          },
          "theme": {
            "type": "string",
            "enum": [
              "LIGHT",
              "DARK"
            ],
            "default": "LIGHT"
          },
          "paymentDue": {
            "type": "number"
          },
          "strikeCount": {
            "type": "number"
          }
        }
      },
      "Trip": {
        "type": "object",
        "properties": {
          "vessel": {
            "type": "string"
          },
          "renter": {
            "type": "string"
          },
          "vesselOwner": {
            "type": "string"
          },
          "paidFees": {
            "type": "number"
          },
          "numberOfGuests": {
            "type": "number"
          },
          "startVerificationCode": {
            "type": "string"
          },
          "endVerificationCode": {
            "type": "string"
          },
          "bookingDate": {
            "type": "string",
            "format": "date-time"
          },
          "bookingStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "bookingEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "canceledByRenter": {
            "type": "boolean"
          },
          "canceledByVesselOwner": {
            "type": "boolean"
          },
          "offerAccepted": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "enum": [
              "PAST",
              "ONGOING",
              "UPCOMING",
              "OFFER"
            ]
          },
          "tripStatus": {
            "type": "string",
            "enum": [
              "COMPLETED",
              "CANCELLED"
            ]
          },
          "refundStatus": {
            "type": "string",
            "enum": [
              "RefundInitiated",
              "RefundInProcess",
              "RefundProcessed",
              "RefundFailed"
            ]
          }
        }
      },
      "TripDTO": {
        "type": "object",
        "properties": {
          "vesselId": {
            "type": "string"
          },
          "numberOfGuests": {
            "type": "number"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "paymentMethodId": {
            "type": "string"
          }
        }
      },
      "TempTripDTO": {
        "type": "object",
        "properties": {
          "vesselId": {
            "type": "string"
          },
          "renterId": {
            "type": "string"
          },
          "vesselOwnerId": {
            "type": "string"
          },
          "paidFees": {
            "type": "number"
          },
          "numberOfGuests": {
            "type": "number"
          },
          "startVerificationCode": {
            "type": "string"
          },
          "endVerificationCode": {
            "type": "string"
          },
          "bookingDate": {
            "type": "string",
            "format": "date-time"
          },
          "bookingStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "bookingEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "Wave"
          },
          "lastName": {
            "type": "string",
            "example": "Last"
          },
          "profileImageUrl": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "number"
          },
          "userAddress": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "province": {
                "type": "string"
              }
            }
          },
          "primaryLanguage": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "gender": {
            "type": "string"
          },
          "rawAddress": {
            "type": "string"
          },
          "theme": {
            "type": "string",
            "enum": [
              "LIGHT",
              "DARK"
            ],
            "default": "LIGHT"
          }
        }
      },
      "LoginDTO": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ForgetPasswordDTO": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "NewPasswordDTO": {
        "type": "object",
        "required": [
          "password",
          "confirmPassword"
        ],
        "properties": {
          "password": {
            "type": "string"
          },
          "confirmPassword": {
            "type": "string"
          }
        }
      },
      "ErrorDTO": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          }
        }
      },
      "CreateCharter": {
        "type": "object",
        "required": [
          "title",
          "vesselLocation",
          "destinationLocation",
          "vesselAddress",
          "destinationAddress",
          "vesselYear",
          "vesselType",
          "vesselCategory",
          "numberOfPassengers"
        ],
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "caption": {
                  "type": "string"
                },
                "imageURL": {
                  "type": "string"
                }
              }
            }
          },
          "numberOfPassengers": {
            "type": "number"
          },
          "vesselLocation": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "destinationLocation": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "longitude": {
                  "type": "number"
                },
                "latitude": {
                  "type": "number"
                }
              }
            }
          },
          "vesselAddress": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "province": {
                "type": "string"
              }
            }
          },
          "rawAddress": {
            "type": "string"
          },
          "destinationAddress": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "street": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "countryCode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "province": {
                  "type": "string"
                },
                "rawAddress": {
                  "type": "string"
                }
              }
            }
          },
          "title": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "vesselBrand": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "default": ""
          },
          "cost": {
            "type": "number"
          },
          "vesselYear": {
            "type": "number"
          },
          "vesselType": {
            "type": "string",
            "enum": [
              "CHARTER"
            ],
            "default": "CHARTER"
          },
          "vesselStatus": {
            "type": "string",
            "enum": [
              "PUBLISHED",
              "UNPUBLISHED"
            ],
            "default": "UNPUBLISHED"
          },
          "vesselCategory": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetCharter": {
        "type": "object",
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "caption": {
                  "type": "string"
                },
                "imageURL": {
                  "type": "string"
                }
              }
            }
          },
          "numberOfPassengers": {
            "type": "number"
          },
          "vesselLocation": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "destinationLocation": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "longitude": {
                  "type": "number"
                },
                "latitude": {
                  "type": "number"
                }
              }
            }
          },
          "vesselAddress": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "province": {
                "type": "string"
              }
            }
          },
          "rawAddress": {
            "type": "string"
          },
          "destinationAddress": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "street": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "countryCode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "province": {
                  "type": "string"
                },
                "rawAddress": {
                  "type": "string"
                }
              }
            }
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "cost": {
            "type": "number"
          },
          "vesselYear": {
            "type": "number"
          },
          "vesselType": {
            "type": "string",
            "enum": [
              "CHARTER"
            ],
            "default": "CHARTER"
          },
          "vesselStatus": {
            "type": "string",
            "enum": [
              "PUBLISHED",
              "UNPUBLISHED"
            ],
            "default": "UNPUBLISHED"
          },
          "vesselCategory": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "trailerPlateNumber": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          }
        }
      },
      "UploadVesselImages": {
        "type": "object",
        "required": [
          "vesselId",
          "vesselType",
          "images"
        ],
        "properties": {
          "vesselId": {
            "type": "string"
          },
          "vesselType": {
            "type": "string"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "base64": {
                  "type": "string"
                },
                "caption": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "UpdateCharter": {
        "type": "object",
        "required": [
          "vesselType"
        ],
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "caption": {
                  "type": "string"
                },
                "imageURL": {
                  "type": "string"
                }
              }
            }
          },
          "numberOfPassengers": {
            "type": "number"
          },
          "vesselLocation": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "destinationLocation": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "longitude": {
                  "type": "number"
                },
                "latitude": {
                  "type": "number"
                }
              }
            }
          },
          "vesselAddress": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "province": {
                "type": "string"
              }
            }
          },
          "rawAddress": {
            "type": "string"
          },
          "destinationAddress": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "street": {
                  "type": "string"
                },
                "postalCode": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "countryCode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "province": {
                  "type": "string"
                },
                "rawAddress": {
                  "type": "string"
                }
              }
            }
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "vesselYear": {
            "type": "number"
          },
          "vesselType": {
            "type": "string",
            "enum": [
              "CHARTER"
            ],
            "default": "CHARTER"
          },
          "vesselStatus": {
            "type": "string",
            "enum": [
              "PUBLISHED",
              "UNPUBLISHED"
            ],
            "default": "UNPUBLISHED"
          },
          "vesselCategory": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vesselPlacement": {
            "type": "string"
          },
          "vesselBrand": {
            "type": "string"
          },
          "vesselModelInfo": {
            "type": "string"
          },
          "vesselLength": {
            "type": "number"
          },
          "vesselWeight": {
            "type": "object",
            "properties": {
              "unit": {
                "type": "string"
              },
              "weight": {
                "type": "number"
              }
            }
          },
          "vesselMaxSpeed": {
            "type": "number"
          },
          "vesselHorsePower": {
            "type": "number"
          },
          "vesselFuelType": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "vesselPricing": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "minimumDeposit": {
                "type": "number"
              },
              "minimumHours": {
                "type": "number"
              },
              "perHour": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                }
              },
              "perDay": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                }
              },
              "perWeek": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "vesselFeatures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "boatLicense": {
            "type": "string"
          },
          "marineSurvey": {
            "type": "string"
          },
          "trailerPlateNumber": {
            "type": "string"
          },
          "hasLifeJackets": {
            "type": "boolean"
          },
          "hasFirstAidKit": {
            "type": "boolean"
          },
          "hasFlashlight": {
            "type": "boolean"
          },
          "hasRope": {
            "type": "boolean"
          }
        }
      },
      "CreateRental": {
        "type": "object",
        "required": [
          "title",
          "vesselLocation",
          "vesselAddress",
          "vesselYear",
          "vesselType",
          "vesselCategory",
          "numberOfPassengers"
        ],
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "caption": {
                  "type": "string"
                },
                "imageURL": {
                  "type": "string"
                }
              }
            }
          },
          "numberOfPassengers": {
            "type": "number"
          },
          "vesselYear": {
            "type": "number"
          },
          "vesselBrand": {
            "type": "string"
          },
          "vesselLocation": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "vesselAddress": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "province": {
                "type": "string"
              }
            }
          },
          "rawAddress": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "default": ""
          },
          "serialNumber": {
            "type": "string"
          },
          "vesselType": {
            "type": "string",
            "enum": [
              "RENTAL"
            ],
            "default": "RENTAL"
          },
          "vesselCategory": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vesselStatus": {
            "type": "string",
            "enum": [
              "PUBLISHED",
              "UNPUBLISHED"
            ],
            "default": "UNPUBLISHED"
          }
        }
      },
      "GetRental": {
        "type": "object",
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "caption": {
                  "type": "string"
                },
                "imageURL": {
                  "type": "string"
                }
              }
            }
          },
          "numberOfPassengers": {
            "type": "number"
          },
          "vesselYear": {
            "type": "number"
          },
          "vesselLocation": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "vesselAddress": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "province": {
                "type": "string"
              }
            }
          },
          "rawAddress": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "vesselType": {
            "type": "string",
            "enum": [
              "RENTAL"
            ],
            "default": "RENTAL"
          },
          "vesselCategory": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vesselStatus": {
            "type": "string",
            "enum": [
              "PUBLISHED",
              "UNPUBLISHED"
            ],
            "default": "UNPUBLISHED"
          },
          "trailerPlateNumber": {
            "type": "string"
          }
        }
      },
      "UpdateRental": {
        "type": "object",
        "required": [
          "vesselType"
        ],
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "caption": {
                  "type": "string"
                },
                "imageURL": {
                  "type": "string"
                }
              }
            }
          },
          "numberOfPassengers": {
            "type": "number"
          },
          "serialNumber": {
            "type": "string"
          },
          "vesselYear": {
            "type": "number"
          },
          "vesselLocation": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "vesselAddress": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "province": {
                "type": "string"
              }
            }
          },
          "rawAddress": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "vesselType": {
            "type": "string",
            "enum": [
              "RENTAL"
            ],
            "default": "RENTAL"
          },
          "vesselCategory": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vesselStatus": {
            "type": "string",
            "enum": [
              "PUBLISHED",
              "UNPUBLISHED"
            ],
            "default": "UNPUBLISHED"
          },
          "vesselPlacement": {
            "type": "string"
          },
          "vesselBrand": {
            "type": "string"
          },
          "vesselModelInfo": {
            "type": "string"
          },
          "vesselLength": {
            "type": "number"
          },
          "vesselWeight": {
            "type": "object",
            "properties": {
              "unit": {
                "type": "string"
              },
              "weight": {
                "type": "number"
              }
            }
          },
          "vesselMaxSpeed": {
            "type": "number"
          },
          "vesselHorsePower": {
            "type": "number"
          },
          "vesselFuelType": {
            "type": "string"
          },
          "vesselPricing": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "minimumDeposit": {
                "type": "number"
              },
              "minimumHours": {
                "type": "number"
              },
              "perHour": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                }
              },
              "perDay": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                }
              },
              "perWeek": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "hasLifeJackets": {
            "type": "boolean"
          },
          "hasFirstAidKit": {
            "type": "boolean"
          },
          "hasFlashlight": {
            "type": "boolean"
          },
          "hasRope": {
            "type": "boolean"
          },
          "vesselFeatures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "marineSurvey": {
            "type": "string"
          },
          "vss": {
            "type": "string"
          },
          "pcoc": {
            "type": "string"
          },
          "pcccp": {
            "type": "string"
          },
          "insurance": {
            "type": "string"
          },
          "pcl": {
            "type": "string"
          },
          "motorLicence": {
            "type": "string"
          },
          "trailerPlateNumber": {
            "type": "string"
          }
        }
      },
      "UpdateStay": {
        "type": "object",
        "required": [
          "vesselType"
        ],
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "caption": {
                  "type": "string"
                },
                "imageURL": {
                  "type": "string"
                }
              }
            }
          },
          "numberOfPassengers": {
            "type": "number"
          },
          "vesselLocation": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "vesselAddress": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "province": {
                "type": "string"
              }
            }
          },
          "rawAddress": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "hasLifeJackets": {
            "type": "boolean"
          },
          "hasFirstAidKit": {
            "type": "boolean"
          },
          "hasFlashlight": {
            "type": "boolean"
          },
          "hasRope": {
            "type": "boolean"
          },
          "vesselType": {
            "type": "string",
            "enum": [
              "STAY"
            ],
            "default": "STAY"
          },
          "vesselCategory": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vesselStatus": {
            "type": "string",
            "enum": [
              "PUBLISHED",
              "UNPUBLISHED"
            ],
            "default": "UNPUBLISHED"
          },
          "vesselYear": {
            "type": "number"
          },
          "numberOfBathrooms": {
            "type": "number"
          },
          "numberOfKitchens": {
            "type": "number"
          },
          "numberOfBeds": {
            "type": "number"
          },
          "vesselPlacement": {
            "type": "string"
          },
          "vesselBrand": {
            "type": "string"
          },
          "vesselModelInfo": {
            "type": "string"
          },
          "vesselLength": {
            "type": "number"
          },
          "serialNumber": {
            "type": "string"
          },
          "vesselWeight": {
            "type": "object",
            "properties": {
              "unit": {
                "type": "string"
              },
              "weight": {
                "type": "number"
              }
            }
          },
          "vesselMaxSpeed": {
            "type": "number"
          },
          "vesselHorsePower": {
            "type": "number"
          },
          "vesselFuelType": {
            "type": "string"
          },
          "vesselPricing": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "minimumDeposit": {
                "type": "number"
              },
              "minimumHours": {
                "type": "number"
              },
              "perHour": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                }
              },
              "perDay": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                }
              },
              "perWeek": {
                "type": "object",
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "vesselFeatures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "boatLicense": {
            "type": "string"
          },
          "marineSurvey": {
            "type": "string"
          },
          "trailerPlateNumber": {
            "type": "string"
          }
        }
      },
      "CreateStay": {
        "type": "object",
        "required": [
          "title",
          "vesselLocation",
          "vesselAddress",
          "vesselYear",
          "vesselType",
          "vesselCategory",
          "numberOfPassengers",
          "numberOfBathrooms",
          "numberOfKitchens",
          "numberOfBeds"
        ],
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "caption": {
                  "type": "string"
                },
                "imageURL": {
                  "type": "string"
                }
              }
            }
          },
          "numberOfPassengers": {
            "type": "number"
          },
          "vesselLocation": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "vesselAddress": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "province": {
                "type": "string"
              }
            }
          },
          "rawAddress": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "default": ""
          },
          "vesselBrand": {
            "type": "string"
          },
          "vesselType": {
            "type": "string",
            "enum": [
              "STAY"
            ],
            "default": "STAY"
          },
          "serialNumber": {
            "type": "string"
          },
          "vesselCategory": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vesselStatus": {
            "type": "string",
            "enum": [
              "PUBLISHED",
              "UNPUBLISHED"
            ],
            "default": "UNPUBLISHED"
          },
          "numberOfBathrooms": {
            "type": "number"
          },
          "numberOfKitchens": {
            "type": "number"
          },
          "numberOfBeds": {
            "type": "number"
          },
          "vesselPlacement": {
            "type": "string"
          },
          "vesselModelInfo": {
            "type": "string"
          },
          "vesselLength": {
            "type": "number"
          },
          "vesselWeight": {
            "type": "object",
            "properties": {
              "unit": {
                "type": "string"
              },
              "weight": {
                "type": "number"
              }
            }
          },
          "vesselMaxSpeed": {
            "type": "number"
          },
          "vesselHorsePower": {
            "type": "number"
          },
          "vesselFuelType": {
            "type": "string"
          },
          "vesselPricing": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "perHour": {
                "type": "object",
                "properties": {
                  "checked": {
                    "type": "boolean"
                  },
                  "amount": {
                    "type": "number"
                  }
                }
              },
              "perDay": {
                "type": "object",
                "properties": {
                  "checked": {
                    "type": "boolean"
                  },
                  "amount": {
                    "type": "number"
                  }
                }
              },
              "perNight": {
                "type": "object",
                "properties": {
                  "checked": {
                    "type": "boolean"
                  },
                  "amount": {
                    "type": "number"
                  }
                }
              },
              "perWeek": {
                "type": "object",
                "properties": {
                  "checked": {
                    "type": "boolean"
                  },
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "vesselFeatures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "boatLicense": {
            "type": "string"
          },
          "marineSurvey": {
            "type": "string"
          }
        }
      },
      "CreateFavourite": {
        "type": "object",
        "properties": {
          "favoriteRentals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "favoriteCharters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "favoriteStays": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortListRentals": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortListCharters": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "shortListStays": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "vesselFeatures": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "boatLicense": {
        "type": "string"
      },
      "marineSurvey": {
        "type": "string"
      },
      "GetStay": {
        "type": "object",
        "properties": {
          "images": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "caption": {
                  "type": "string"
                },
                "imageURL": {
                  "type": "string"
                }
              }
            }
          },
          "numberOfPassengers": {
            "type": "number"
          },
          "vesselLocation": {
            "type": "object",
            "properties": {
              "longitude": {
                "type": "number"
              },
              "latitude": {
                "type": "number"
              }
            }
          },
          "vesselAddress": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "postalCode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "province": {
                "type": "string"
              }
            }
          },
          "rawAddress": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "vesselType": {
            "type": "string",
            "enum": [
              "STAY"
            ],
            "default": "STAY"
          },
          "vesselCategory": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vesselStatus": {
            "type": "string",
            "enum": [
              "PUBLISHED",
              "UNPUBLISHED"
            ],
            "default": "UNPUBLISHED"
          },
          "numberOfBathrooms": {
            "type": "number"
          },
          "numberOfKitchens": {
            "type": "number"
          },
          "numberOfBeds": {
            "type": "number"
          },
          "serialNumber": {
            "type": "string"
          },
          "vesselPlacement": {
            "type": "string"
          },
          "vesselYear": {
            "type": "number"
          },
          "vesselBrand": {
            "type": "string"
          },
          "vesselModelInfo": {
            "type": "string"
          },
          "vesselLength": {
            "type": "number"
          },
          "vesselWeight": {
            "type": "object",
            "properties": {
              "unit": {
                "type": "string"
              },
              "weight": {
                "type": "number"
              }
            }
          },
          "vesselMaxSpeed": {
            "type": "number"
          },
          "vesselHorsePower": {
            "type": "number"
          },
          "vesselFuelType": {
            "type": "string"
          },
          "vesselPricing": {
            "type": "object",
            "properties": {
              "currency": {
                "type": "string"
              },
              "perHour": {
                "type": "object",
                "properties": {
                  "checked": {
                    "type": "boolean"
                  },
                  "amount": {
                    "type": "number"
                  }
                }
              },
              "perDay": {
                "type": "object",
                "properties": {
                  "checked": {
                    "type": "boolean"
                  },
                  "amount": {
                    "type": "number"
                  }
                }
              },
              "perNight": {
                "type": "object",
                "properties": {
                  "checked": {
                    "type": "boolean"
                  },
                  "amount": {
                    "type": "number"
                  }
                }
              },
              "perWeek": {
                "type": "object",
                "properties": {
                  "checked": {
                    "type": "boolean"
                  },
                  "amount": {
                    "type": "number"
                  }
                }
              }
            }
          },
          "vesselFeatures": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "boatLicense": {
            "type": "string"
          },
          "marineSurvey": {
            "type": "string"
          },
          "trailerPlateNumber": {
            "type": "string"
          }
        }
      },
      "GetAvailability": {
        "type": "object",
        "properties": {
          "availabilities": {
            "type": "array",
            "properties": {
              "country": {
                "type": "string"
              },
              "provinces": {
                "type": "array",
                "properties": {
                  "province": {
                    "type": "string"
                  },
                  "months": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreateAvailability": {
        "type": "object",
        "required": [
          "availabilities",
          "country",
          "provinces",
          "province",
          "months"
        ],
        "properties": {
          "availabilities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "country": {
                  "type": "string"
                },
                "provinces": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "province": {
                        "type": "string"
                      },
                      "months": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "GetAddListing": {
        "type": "object",
        "properties": {
          "getStarted": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "imageURL": {
                "type": "string"
              }
            }
          }
        }
      },
      "UpdateAddListing": {
        "type": "object",
        "required": [
          "getStarted"
        ],
        "properties": {
          "getStarted": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "imageURL": {
                "type": "string"
              }
            }
          }
        }
      },
      "CreateAddListing": {
        "type": "object",
        "required": [
          "getStarted"
        ],
        "properties": {
          "getStarted": {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "imageURL": {
                "type": "string"
              }
            }
          }
        }
      },
      "ConfigurationDTO": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "stringValue": {
            "type": "string"
          },
          "booleanValue": {
            "type": "boolean"
          },
          "numberValue": {
            "type": "number"
          },
          "arrayValue": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "JumioDTO": {
        "type": "object",
        "required": [
          "customerInternalReference",
          "userReference",
          "reportingCriteria",
          "workflowId",
          "presets",
          "locale"
        ],
        "properties": {
          "customerInternalReference": {
            "type": "string"
          },
          "userReference": {
            "type": "string"
          },
          "reportingCriteria": {
            "type": "string"
          },
          "workflowId": {
            "type": "number"
          },
          "presets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "index": {
                  "type": "number"
                },
                "country": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            }
          },
          "locale": {
            "type": "string"
          }
        }
      },
      "TruliooVerfiyDTO": {
        "type": "object",
        "required": [
          "TruliooVerfiyDTO",
          "ValidateDocumentImageQuality",
          "AcceptIncompleteDocument",
          "DocumentType",
          "DocumentBackImage",
          "locale"
        ],
        "properties": {
          "AcceptTruliooTermsAndConditions": {
            "type": "boolean"
          },
          "VerboseMode": {
            "type": "boolean"
          },
          "CallBackUrl": {
            "type": "string"
          },
          "CountryCode": {
            "type": "string"
          },
          "CustomerReferenceID": {
            "type": "string"
          },
          "DataFields": {
            "type": "object",
            "properties": {
              "Document": {
                "type": "object",
                "properties": {
                  "DocumentFrontImage": {
                    "type": "string"
                  },
                  "DocumentBackImage": {
                    "type": "string"
                  },
                  "LivePhoto": {
                    "type": "string"
                  },
                  "DocumentType": {
                    "type": "string"
                  },
                  "AcceptIncompleteDocument": {
                    "type": "boolean"
                  },
                  "ValidateDocumentImageQuality": {
                    "type": "boolean"
                  }
                }
              },
              "PersonInfo": {
                "type": "object",
                "properties": {
                  "FirstGivenName": {
                    "type": "string"
                  },
                  "FirstSurName": {
                    "type": "string"
                  },
                  "DayOfBirth": {
                    "type": "number"
                  },
                  "MonthOfBirth": {
                    "type": "number"
                  },
                  "YearOfBirth": {
                    "type": "number"
                  },
                  "Gender": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "ConfigurationModel": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "stringValue": {
            "type": "string"
          },
          "booleanValue": {
            "type": "boolean"
          },
          "numberValue": {
            "type": "number"
          },
          "arrayValue": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BlockEventDTO": {
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Event": {
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "vesselId": {
            "type": "string"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "BLOCKED",
              "BOOKED",
              "PENDING"
            ]
          }
        }
      },
      "BookingVessel": {
        "type": "object",
        "required": [
          "start",
          "end"
        ],
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "vessel": {
            "type": "string"
          },
          "userDetails": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "modifiedBy": {
            "type": "string"
          },
          "bookingDetails": {
            "type": "object",
            "properties": {
              "numberOfPassengers": {
                "type": "number"
              },
              "notes": {
                "type": "string"
              }
            }
          },
          "eventType": {
            "type": "string",
            "enum": [
              "BLOCKED",
              "BOOKED",
              "PENDING"
            ]
          }
        }
      },
      "JumioResponse": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string"
          },
          "transactionReference": {
            "type": "string"
          },
          "redirectUrl": {
            "type": "string"
          }
        }
      },
      "FaqDTO": {
        "type": "object",
        "required": [
          "question",
          "answer"
        ],
        "properties": {
          "question": {
            "type": "string"
          },
          "answer": {
            "type": "string"
          },
          "visible": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "Faq": {
        "type": "object",
        "required": [
          "question",
          "answer"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "question": {
            "type": "string"
          },
          "answer": {
            "type": "string"
          },
          "visible": {
            "type": "boolean",
            "default": true
          }
        }
      },
      "ReportDTO": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "photos": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          },
          "userType": {
            "type": "string",
            "enum": [
              "VESSEL_OWNER",
              "GUEST"
            ],
            "default": "VESSEL_OWNER"
          },
          "reportType": {
            "type": "string",
            "enum": [
              "PRE_DEPARTURE",
              "POST_TRIP",
              "WEATHER",
              "EQUIPMENT",
              "GENERAL_PREPARATIONS",
              "CHECK_DOCUMENTATION",
              "WATERCRAFT_CONDITIONS",
              "POST_DOCUMENTATION"
            ],
            "default": "PRE_DEPARTURE"
          }
        }
      },
      "Report": {
        "type": "object",
        "required": [
          "reportedDate",
          "description",
          "reportedBy",
          "userType"
        ],
        "properties": {
          "_id": {
            "type": "string"
          },
          "transactionId": {
            "type": "string"
          },
          "reportedDate": {
            "type": "string",
            "format": "date-time"
          },
          "trip": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "photos": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reportedBy": {
            "type": "string",
            "description": "The User Id of the reporter"
          },
          "userType": {
            "type": "string",
            "enum": [
              "VESSEL_OWNER",
              "GUEST"
            ],
            "default": "VESSEL_OWNER"
          },
          "stripeTransactionId": {
            "type": "string"
          },
          "reportType": {
            "type": "string",
            "enum": [
              "PRE_DEPARTURE",
              "POST_TRIP",
              "WEATHER",
              "EQUIPMENT",
              "GENERAL_PREPARATIONS",
              "CHECK_DOCUMENTATION",
              "WATERCRAFT_CONDITIONS",
              "POST_DOCUMENTATION"
            ],
            "default": "PRE_DEPARTURE"
          }
        }
      },
      "ReviewDTO": {
        "type": "object",
        "required": [
          "description",
          "rating"
        ],
        "properties": {
          "description": {
            "type": "string"
          },
          "rating": {
            "type": "number",
            "default": 5
          },
          "tripId": {
            "type": "string"
          }
        }
      },
      "Review": {
        "type": "object",
        "required": [
          "description",
          "rating"
        ],
        "properties": {
          "description": {
            "type": "string"
          },
          "rating": {
            "type": "number",
            "default": 5
          },
          "vessel": {
            "type": "string"
          },
          "reviewer": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "profileImageUrl": {
                "type": "string"
              }
            }
          }
        }
      },
      "CategoryDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "stay": {
            "type": "object",
            "properties": {
              "proofOfId": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselDriversLicense": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselLicense": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselSafety": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "insurance": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "serialNumber": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          },
          "charter": {
            "type": "object",
            "properties": {
              "proofOfId": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselDriversLicense": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselLicense": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselSafety": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "insurance": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "serialNumber": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          },
          "rental": {
            "type": "object",
            "properties": {
              "proofOfId": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselDriversLicense": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselLicense": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselSafety": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "insurance": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "serialNumber": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          },
          "isRental": {
            "type": "boolean"
          },
          "isCharter": {
            "type": "boolean"
          },
          "isStay": {
            "type": "boolean"
          },
          "isProofOfId": {
            "type": "boolean"
          },
          "isVesselDriversLicense": {
            "type": "boolean"
          },
          "isVesselLicense": {
            "type": "boolean"
          },
          "isVesselSafety": {
            "type": "boolean"
          },
          "isInsurance": {
            "type": "boolean"
          },
          "isVisible": {
            "type": "boolean"
          },
          "isSerialNumber": {
            "type": "boolean"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "stay": {
            "type": "object",
            "properties": {
              "proofOfId": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselDriversLicense": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselLicense": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselSafety": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "insurance": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "serialNumber": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          },
          "charter": {
            "type": "object",
            "properties": {
              "proofOfId": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselDriversLicense": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselLicense": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselSafety": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "insurance": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "serialNumber": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          },
          "rental": {
            "type": "object",
            "properties": {
              "proofOfId": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselDriversLicense": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselLicense": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "vesselSafety": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "insurance": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "serialNumber": {
                "type": "object",
                "properties": {
                  "optional": {
                    "type": "boolean",
                    "default": false
                  },
                  "required": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          },
          "isRental": {
            "type": "boolean"
          },
          "isCharter": {
            "type": "boolean"
          },
          "isStay": {
            "type": "boolean"
          },
          "isProofOfId": {
            "type": "boolean"
          },
          "isVesselDriversLicense": {
            "type": "boolean"
          },
          "isVesselLicense": {
            "type": "boolean"
          },
          "isVesselSafety": {
            "type": "boolean"
          },
          "isInsurance": {
            "type": "boolean"
          },
          "isVisible": {
            "type": "boolean"
          },
          "isSerialNumber": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "BasicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}
